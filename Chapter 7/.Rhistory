fill = "Ethnicity"
) +
coord_flip() +
theme(
legend.position = "bottom",
legend.direction = "vertical"
)  +
guides(
fill = guide_legend(
reverse = T
)
)
View(alameda_education_race)
View(total_alameda__race)
View(alameda_education_all_ethnicity)
View(alameda_education_all_ethnicity)
alameda_education_all_ethnicity %>%
filter(!ethnicity = "Total")
alameda_education_all_ethnicity %>%
filter(!ethnicity == "Total")
alameda_education_all_ethnicity %>%
filter(!ethnicity == "Total")
alameda_education_all_ethnicity %>%
filter(!ethnicity == "Total"),
alameda_education_all_ethnicity %>%
filter(!ethnicity == "Total") %>%
ggplot() +
geom_bar(
aes(
x = education %>% factor(levels = rev(c("Total","Less than high school diploma","High school graduate (includes equivalency)","Some college or associate's degree","Bachelor's degree or higher"))),
y = estimate,
fill = ethnicity %>% factor(levels = rev(unique(alameda_education_all_ethnicity$ethnicity)))
),
stat = "identity",
position = "fill"
) +
labs(
x = "Education Attainment",
y = "Proportion of population 25 years or older",
title = "Bay Area educational attainment by ethnicity",
fill = "Ethnicity"
) +
coord_flip() +
theme(
legend.position = "bottom",
legend.direction = "vertical"
)  +
guides(
fill = guide_legend(
reverse = T
)
)
total_alameda_ethnicity <-
alameda_education_all_ethnicity %>%
filter(!ethnicity == "Total") %>%
group_by(ethnicity) %>%
summarize(estimate = sum(estimate)) %>%
mutate(education = "Total")
View(total_alameda_ethnicity)
alameda_education_all_ethnicity %>%
filter(!ethnicity == "Total") %>%
rbind(total_alameda_ethnicity) %>%
ggplot() +
geom_bar(
aes(
x = education %>% factor(levels = rev(c("Total","Less than high school diploma","High school graduate (includes equivalency)","Some college or associate's degree","Bachelor's degree or higher"))),
y = estimate,
fill = ethnicity %>% factor(levels = rev(unique(alameda_education_all_ethnicity$ethnicity)))
),
stat = "identity",
position = "fill"
) +
labs(
x = "Education Attainment",
y = "Proportion of population 25 years or older",
title = "Bay Area educational attainment by ethnicity",
fill = "Ethnicity"
) +
coord_flip() +
theme(
legend.position = "bottom",
legend.direction = "vertical"
)  +
guides(
fill = guide_legend(
reverse = T
)
)
alameda_education_all_ethnicity %>%
filter(!ethnicity == "Total") %>%
rbind(total_alameda_ethnicity) %>%
ggplot() +
geom_bar(
aes(
x = education %>% factor(levels = rev(c("Total","Less than high school diploma","High school graduate (includes equivalency)","Some college or associate's degree","Bachelor's degree or higher"))),
y = estimate,
fill = ethnicity %>% factor(levels = rev(unique(alameda_education_all_ethnicity$ethnicity)))
),
stat = "identity",
position = "fill"
) +
labs(
x = "Education Attainment",
y = "Proportion of population 25 years or older",
title = "Alameda educational attainment by ethnicity",
fill = "Ethnicity"
) +
coord_flip() +
theme(
legend.position = "bottom",
legend.direction = "vertical"
)  +
guides(
fill = guide_legend(
reverse = T
)
)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='chriscobedo',
token='D85B5B14031757B1FA73B032169569A1',
secret='F762VzpDQfRoLEBIYcd0C7F8HV0JfyEzNM4+vAhJ')
setwd("~/Documents/GitHub/chriscobedo.github.io/Chapter 7")
setwd("~/Documents/GitHub/chriscobedo.github.io/Chapter 7")
library(rsconnect)
library(rsconnect)
rsconnect::setAccountInfo(name='chriscobedo',
token='D85B5B14031757B1FA73B032169569A1',
secret='F762VzpDQfRoLEBIYcd0C7F8HV0JfyEzNM4+vAhJ')
library(shiny)
rsconnect::setAccountInfo(name='chriscobedo',
token='D85B5B14031757B1FA73B032169569A1',
secret='F762VzpDQfRoLEBIYcd0C7F8HV0JfyEzNM4+vAhJ')
runApp()
knitr::opts_chunk$set(echo = F, warnings = F, message = F)
library(tidyverse)
library(plotly)
library(stringr)
library(lubridate)
years <- 2017:2021
quarters <- 1:4
types <- c("Electric","Gas")
pge_full <- NULL
for(year in years){
for(quarter in quarters){
for(type in types){
filename <-
paste0(
"pge/PGE_",
year,
"_Q",
quarter,
"_",
type,
"UsageByZip.csv"
)
if(file.exists(filename)){
temp <- read_csv(filename)
if(type == "Electric"){
## mutate electric to BTU
mutatedTemp <-
temp %>%
filter(
CUSTOMERCLASS %in%
c("Elec- Residential", "Elec- Commercial")
) %>%
group_by(MONTH, YEAR, CUSTOMERCLASS) %>%
summarize(
TOTALKWH =
sum(
TOTALKWH,
na.rm = T
)
) %>%
mutate(
TOTALKBTU =
TOTALKWH * 3.412
)
} else {
## mutate gas to BTU
mutatedTemp <-
temp %>%
filter(
CUSTOMERCLASS %in%
c("Gas- Residential", "Gas- Commercial")
) %>%
group_by(MONTH, YEAR, CUSTOMERCLASS) %>%
summarize(
TOTALTHM =
sum(
TOTALTHM,
na.rm = T
)
) %>%
mutate(
TOTALKBTU =
TOTALTHM * 100,000
)
}
pge_full <- rbind(pge_full,mutatedTemp)
saveRDS(pge_full, "pge_full.rds")
}
}
}
}
pge_full_dates <- pge_full %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
years <- 2017:2021
quarters <- 1:4
types <- c("Electric","Gas")
pge_full <- NULL
for(year in years){
for(quarter in quarters){
for(type in types){
filename <-
paste0(
"pge/PGE_",
year,
"_Q",
quarter,
"_",
type,
"UsageByZip.csv"
)
if(file.exists(filename)){
temp <- read_csv(filename)
if(type == "Electric"){
## mutate electric to BTU
mutatedTemp <-
temp %>%
filter(
CUSTOMERCLASS %in%
c("Elec- Residential", "Elec- Commercial")
) %>%
group_by(MONTH, YEAR, CUSTOMERCLASS) %>%
summarize(
TOTALKWH =
sum(
TOTALKWH,
na.rm = T
)
) %>%
mutate(
TOTALKBTU =
TOTALKWH * 3.412
)
} else {
## mutate gas to BTU
mutatedTemp <-
temp %>%
filter(
CUSTOMERCLASS %in%
c("Gas- Residential", "Gas- Commercial")
) %>%
group_by(MONTH, YEAR, CUSTOMERCLASS) %>%
summarize(
TOTALTHM =
sum(
TOTALTHM,
na.rm = T
)
) %>%
mutate(
TOTALKBTU =
TOTALTHM * 100,000
)
}
pge_full <- rbind(pge_full,mutatedTemp)
saveRDS(pge_full, "pge_full.rds")
}
}
}
}
pge_residential_chart <-
pge_full_dates %>%
filter(
CUSTOMERCLASS %in% c("Elec- Residential", "Gas- Residential")
) %>%
ggplot() +
geom_bar(
aes(
x = DATE,
y = TOTALKBTU,
fill = CUSTOMERCLASS
),
stat = "identity",
position = "stack"
) +
labs(
x = "Year",
y = "kBTU",
title = "PG&E Territory Residential Electricity and Gas Usage, 2017-2021",
fill = "Residential Power Type"
)
years <- 2017:2021
quarters <- 1:4
types <- c("Electric","Gas")
pge_full <- NULL
for(year in years){
for(quarter in quarters){
for(type in types){
filename <-
paste0(
"pge/PGE_",
year,
"_Q",
quarter,
"_",
type,
"UsageByZip.csv"
)
if(file.exists(filename)){
temp <- read_csv(filename)
if(type == "Electric"){
## mutate electric to BTU
mutatedTemp <-
temp %>%
filter(
CUSTOMERCLASS %in%
c("Elec- Residential", "Elec- Commercial")
) %>%
group_by(MONTH, YEAR, CUSTOMERCLASS) %>%
summarize(
TOTALKWH =
sum(
TOTALKWH,
na.rm = T
)
) %>%
mutate(
TOTALKBTU =
TOTALKWH * 3.412
)
} else {
## mutate gas to BTU
mutatedTemp <-
temp %>%
filter(
CUSTOMERCLASS %in%
c("Gas- Residential", "Gas- Commercial")
) %>%
group_by(MONTH, YEAR, CUSTOMERCLASS) %>%
summarize(
TOTALTHM =
sum(
TOTALTHM,
na.rm = T
)
) %>%
mutate(
TOTALKBTU =
TOTALTHM * 100,000
)
}
pge_full <- rbind(pge_full,mutatedTemp)
saveRDS(pge_full, "pge_full.rds")
}
}
}
}
# Chunk 1: setup
knitr::opts_chunk$set(warning = F, message = F)
# Chunk 2
library(tidyverse)
library(plotly)
library(sf)
library(tigris)
library(leaflet)
library(censusapi)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
# Chunk 3
year <- 2020
quarters <- 1:4
type <- "Electric"
pge_20_elec <- NULL
for(quarter in quarters){
filename <-
paste0(
"pge/PGE_",
year,
"_Q",
quarter,
"_",
type,
"UsageByZip.csv"
)
print(filename)
temp <- read_csv(filename)
pge_20_elec <- rbind(pge_20_elec,temp)
saveRDS(pge_20_elec, "pge_20_elec.rds")
}
# Chunk 4
pge_filter <- filter(pge_20_elec, CUSTOMERCLASS %in% c("Elec- Residential","Elec- Commercial"))
names(pge_filter)
head(pge_filter)
pge_filter[1,1]
pge_filter[1:5,c("ZIPCODE")]
pge_filter[1:5, ]$CUSTOMERCLASS
pge_select <-
select(
pge_filter,
!c(YEAR, COMBINED, AVERAGEKWH)
)
pge_group <-
group_by(
pge_select,
MONTH,
CUSTOMERCLASS
)
pge_summarize <-
summarize(
pge_group,
TOTALKWH =
sum(
TOTALKWH,
na.rm = T
),
TOTALCUSTOMERS =
sum(
TOTALCUSTOMERS,
na.rm = T
)
)
pge_mutate <-
mutate(
pge_summarize,
AVERAGEKWH =
TOTALKWH/TOTALCUSTOMERS
)
pge_20_elec <- pge_mutate
pge_wide <-
pivot_wider(
pge_summarize,
names_from = CUSTOMERCLASS,
values_from = TOTALKWH
)
pge_wide
pge_tidy <-
pivot_longer(
pge_wide,
c("Elec- Commercial", "Elec- Residential"),
names_to = "CUSTOMERCLASS",
values_to = "TOTALKWH"
)
plot_ly() %>%
add_trace(
data = pge_mutate %>% filter(CUSTOMERCLASS == "Elec- Residential"),
x = ~MONTH,
y = ~TOTALKWH,
type = "bar",
name = "Residential"
) %>%
add_trace(
data = pge_mutate %>% filter(CUSTOMERCLASS == "Elec- Commercial"),
x = ~MONTH,
y = ~TOTALKWH,
type = "bar",
name = "Commercial"
) %>%
layout(
xaxis = list(
title = "Month",
fixedrange = T
),
yaxis = list(
title = "kWh",
fixedrange = T
),
barmode = "stack",
legend = list(title = list(text = "Electricity Type"))
) %>%
config(displayModeBar = F)
# Chunk 5
health_full <- read_csv("https://chronicdata.cdc.gov/api/views/cwsq-ngmh/rows.csv?accessType=DOWNLOAD")
health_ca <- filter(health_full, StateAbbr == "CA")
pge_data_raw <- readRDS("~/Documents/GitHub/chriscobedo.github.io/Chapter 7/pge_data_raw.rds")
View(pge_data_raw)
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
View(pge_data)
