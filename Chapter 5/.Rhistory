size = 2
)
##testing residuals
slope <- optimization$par[1]
yintercept <- optimization$par[2]
best_fit_candidate <- slope * bay_education_income_tract$perc_college + yintercept
residuals <- bay_education_income_tract$perc_over100k - best_fit_candidate
mean(residuals)
plot(density(residuals))
model <- lm(perc_over100k ~ perc_college, bay_education_income_tract)
summary(model)
predict(model, data.frame(perc_college = 0.5))
Sys.Date() %>% as.numeric()
library(tidyverse)
library(censusapi)
library(sf)
library(mapview)
library(tigris)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
Sys.setenv(CENSUS_KEY="c7ce771b506b13ca6875d12a179606f8087fa381")
bay_multiple_tract <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c(
"B06009_001E",
"B06009_002E",
"B06009_003E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E",
"B19001A_001E"
)
) %>%
transmute(
tract = paste0(state, county, tract),
perc_college = 1 - (B06009_002E + B06009_003E) / B06009_001E,
perc_over100k = (B19001_014E + B19001_015E + B19001_016E + B19001_017E) / B19001_001E,
perc_white = B19001A_001E / B19001_001E
) %>%
filter(
!is.na(perc_college),
!is.na(perc_over100k),
!is.na(perc_white)
)
View(bay_multiple_tract)
install.packages("corrplot")
library(corrplot)
correlationplot <- bay_multiple_tract %>%
select(
perc_white,
perc_college,
perc_over100k
) %>%
cor()
corrplot(
correlationplot,
method = "number",
type = "upper"
)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = perc_college
)
) +
geom_point() +
geom_smooth(method = "lm")
model <- lm(perc_college ~ perc_white, bay_multiple_tract)
summary(model)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = perc_college
)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = perc_over100k
)
) +
geom_point() +
geom_smooth(method = "lm")
full_model <- lm(perc_over100k ~ perc_college + perc_white, bay_multiple_tract)
summary(full_model)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = perc_over100k
)
) +
geom_point(
aes(
color = perc_college
)
)
install.packages(gtools)
install.packages("gtools")
bay_multiple_tract %>%
mutate(
college_round = quantcut(perc_college, 4)
) %>%
ggplot() +
geom_point(
aes(
x = perc_white,
y = perc_over100k,
color = college_round
)
) +
geom_smooth(
aes(
x = perc_white,
y = perc_over100k,
color = college_round
),
method = "lm",
se = F
) +
geom_smooth(
aes(
x = perc_white,
y = perc_over100k
),
method = "lm",
se = F,
color = "black",
linetype = 2
)
library(gtools)
bay_multiple_tract %>%
mutate(
college_round = quantcut(perc_college, 4)
) %>%
ggplot() +
geom_point(
aes(
x = perc_white,
y = perc_over100k,
color = college_round
)
) +
geom_smooth(
aes(
x = perc_white,
y = perc_over100k,
color = college_round
),
method = "lm",
se = F
) +
geom_smooth(
aes(
x = perc_white,
y = perc_over100k
),
method = "lm",
se = F,
color = "black",
linetype = 2
)
model <- lm(perc_over100k ~ perc_college, bay_multiple_tract)
ggplot(
data = bay_multiple_tract,
aes(
x = perc_white,
y = model$residuals
)
) +
geom_point() +
geom_smooth(method = "lm")
install.packages("car")
vif(full_model)
library(car)
vif(full_model)
vif(full_model)
ces4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
knitr::opts_chunk$set(echo = F, warnings = F, message = F)
library(tidyverse)
library(sf)
library(leaflet)
library(mapview)
library(corrplot)
library(gtools)
library(car)
library(tigris)
library(censusapi)
library(readxl)
Sys.setenv(CENSUS_KEY="c7ce771b506b13ca6875d12a179606f8087fa381")
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
ces4 <- read_excel("calenviroscreen40resultsdatadictionary_F_2021.xlsx")
ca_tracts <- tracts("CA")
ces4_map <- ces4 %>%
left_join(
ca_tracts %>%
transmute(GEOID = GEOID %>% as.numeric()),
by = c("Census Tract" = "GEOID")
) %>%
st_as_sf()
mapview(ces4_map, zcol = "Asthma")
View(ces4_map)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
Asthma,
"ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
values = ~Asthma,
title = "ED visits for Asthma<br>per year per 10,000,<br>averaged over 2015-2017"
)
Asthma_pal <- colorNumeric(
palette = "YlOrRd",
domain = ces4_map$Asthma
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~Asthma_pal(Asthma),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
Asthma,
"ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pums_calculations,
pal = Asthma_pal
values = ~Asthma,
Asthma_pal <- colorNumeric(
palette = "YlOrRd",
domain = ces4_map$Asthma
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~Asthma_pal(Asthma),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
Asthma,
"ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pums_calculations,
pal = Asthma_pal,
values = ~Asthma,
title = "ED visits for Asthma<br>per year per 10,000,<br>averaged over 2015-2017"
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~Asthma_pal(Asthma),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
Asthma,
"ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
pal = Asthma_pal,
values = ~Asthma,
title = "ED visits for Asthma<br>per year per 10,000,<br>averaged over 2015-2017"
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~Asthma_pal(Asthma),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(Asthma),
" ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
pal = Asthma_pal,
values = ~Asthma,
title = "ED visits for Asthma<br>per year per 10,000,<br>averaged over 2015-2017"
)
PM_pal <- colorNumeric(
palette = "Purples",
domain = ces4_map$PM2.5
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~PM_pal(PM2.5),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = 1,
label = ~paste0(
round(PM2.5),
" ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
pal = PM_pal,
values = ~PM2.5,
title = "ED visits for Asthma<br>per year per 10,000,<br>averaged over 2015-2017"
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~PM_pal(PM2.5),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = 3,
label = ~paste0(
round(PM2.5),
" ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
pal = PM_pal,
values = ~PM2.5,
title = "ED visits for Asthma<br>per year per 10,000,<br>averaged over 2015-2017"
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~PM_pal(PM2.5),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = .5,
label = ~paste0(
round(PM2.5),
" ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
pal = PM_pal,
values = ~PM2.5,
title = "ED visits for Asthma<br>per year per 10,000,<br>averaged over 2015-2017"
)
setwd("~/Documents/GitHub/chriscobedo.github.io/Chapter 5")
PM_pal <- colorNumeric(
palette = "Purples",
domain = ces4_map$PM2.5
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~PM_pal(PM2.5),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = .5,
label = ~paste0(
round(PM2.5),
" ED visits for Asthma per year per 10,000"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
pal = PM_pal,
values = ~PM2.5,
title = "ED visits for Asthma<br>per year per 10,000,<br>averaged over 2015-2017"
)
PM_pal <- colorNumeric(
palette = "Purples",
domain = ces4_map$PM2.5
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~PM_pal(PM2.5),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = .5,
label = ~paste0(
round(PM2.5),
" µg/m3 of PM2.5 on average per year"
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
pal = PM_pal,
values = ~PM2.5,
title = "Annual mean concentration<br>of PM2.5 (µg/m3) from<br>averaged over 2015-2017"
)
leaflet() %>%
addTiles() %>%
addPolygons(
data =ces4_map,
fillColor = ~PM_pal(PM2.5),
color = "white",
opacity = 0.5,
fillOpacity = 0.8,
weight = .5,
label = ~paste0(
PM2.5,
" µg/m3 of PM2.5 on average per year"
),
highlightOptions = highlightOptions(
weight = 3,
opacity = 1
)
) %>%
addLegend(
data = ces4_map,
pal = PM_pal,
values = ~PM2.5,
title = "Annual mean concentration<br>of PM2.5 (µg/m3)<br>averaged over 2015-2017"
)
unlink("ChrisEscobedo_A5_cache", recursive = TRUE)
